#include <array>
#include <sstream>
#include <fstream>

#include "skse64/NiNodes.h"

#include "finger_curves.h"
#include "math_utils.h"
#include "vrikinterface001.h"


float g_fingerTipLengths[] = { 2.202f, 2.419f, 2.192f, 1.6676f, 1.7275f };

struct FingerCurveData
{
	enum class State : UInt8
	{
		Inactive,
		Init,
		Step,
		Skip,
		Finish,
	};

	FingerCurveData(bool isLeft)
	{
		this->isLeft = isLeft;

		frameCount = 0;
		state = State::Init;
	}

	std::vector<std::pair<float, std::pair<float, float>>> fingerRangeVals[5]; // array of open/closed value, [angle, length]
	NiPoint3 zeroAngleVector[5]; // handspace
	NiPoint3 fingerNormal[5]; // handspace

	float currentRangeVal;

	int frameCount = 0;
	bool isLeft;
	State state = State::Inactive;
};

std::unique_ptr<FingerCurveData> g_fingerCurveData = nullptr;
void StartGenerateFingerCurve(bool isLeft)
{
	g_fingerCurveData = std::make_unique<FingerCurveData>(isLeft);
}

void StopGenerateFingerCurve()
{
	g_fingerCurveData = nullptr;
}

std::string VectorToString(NiPoint3 vector)
{
	std::stringstream ss;
	ss << vector.x << ", " << vector.y << ", " << vector.z;
	return ss.str();
}

void DumpFingerCurve(FingerCurveData *fingerCurve)
{
	for (int i = 0; i < 5; i++) {
		std::ofstream file;
		file.open(std::string("fingerCurve") + std::to_string(i) + ".txt");

		file << "Zero Angle Vector" << '\n';
		file << VectorToString(fingerCurve->zeroAngleVector[i]) << '\n';

		file << "Normal Vector" << '\n';
		file << VectorToString(fingerCurve->fingerNormal[i]) << '\n';

		file << "Range Values" << '\n';
		for (auto &entry : fingerCurve->fingerRangeVals[i]) {
			float val = entry.first;
			float angle = entry.second.first;
			float length = entry.second.second;
			file << "{ " << val << ", " << angle << ", " << length << " }," << '\n';
		}

		file.close();
	}
}

void UpdateGenerateFingerCurve(BSFixedString &handNodeName, BSFixedString fingerNodeNames[5][3])
{
	if (g_fingerCurveData && g_fingerCurveData->state != FingerCurveData::State::Inactive) {
		bool isLeft = g_fingerCurveData->isLeft;

		PlayerCharacter *player = *g_thePlayer;


		NiAVObject *handNode = player->GetNiRootNode(1)->GetObjectByName(&handNodeName.data);
		NiAVObject *handNode3rd = player->GetNiRootNode(0)->GetObjectByName(&handNodeName.data);

		if (handNode && handNode3rd) {
			if (g_fingerCurveData->state == FingerCurveData::State::Init) {
				if (g_fingerCurveData->frameCount < 100) {
					g_fingerCurveData->currentRangeVal = 1.0f;
					g_vrikInterface->setFingerRange(isLeft, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
				}
				else {
					// Extract zero angle vector from whatever the vector is at this point
					for (int i = 0; i < 5; i++) {
						NiAVObject *fingerStart3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][0].data);
						NiAVObject *fingerEnd3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][2].data);

						NiPoint3 startToEnd = fingerEnd3rd->m_oldWorldTransform.pos - fingerStart3rd->m_oldWorldTransform.pos;

						NiPoint3 fingerEndZAxis = { fingerEnd3rd->m_oldWorldTransform.rot.data[0][2], fingerEnd3rd->m_oldWorldTransform.rot.data[1][2], fingerEnd3rd->m_oldWorldTransform.rot.data[2][2] };
						NiPoint3 tip = fingerEndZAxis * g_fingerTipLengths[i];

						startToEnd += tip;

						g_fingerCurveData->zeroAngleVector[i] = VectorNormalized(handNode3rd->m_oldWorldTransform.rot.Transpose() * VectorNormalized(startToEnd));
					}

					g_fingerCurveData->frameCount = 0;
					g_fingerCurveData->state = FingerCurveData::State::Step;
				}
			}
			if (g_fingerCurveData->state == FingerCurveData::State::Step) {
				if (g_fingerCurveData->frameCount < 8000) {
					float val = max(0, 1.0f - (g_fingerCurveData->frameCount / 8000.0f));
					g_fingerCurveData->currentRangeVal = val;
					g_vrikInterface->setFingerRange(isLeft, val, val, val, val, val, val, val, val, val, val);
					g_fingerCurveData->state = FingerCurveData::State::Skip;
				}
				else {
					g_fingerCurveData->frameCount = 0;
					g_fingerCurveData->state = FingerCurveData::State::Finish;
				}
			}
			if (g_fingerCurveData->state == FingerCurveData::State::Skip) {
				if (g_fingerCurveData->frameCount % 40 == 0) {
					// Only step once every few frames

					for (int i = 0; i < 5; i++) {
						NiAVObject *fingerStart3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][0].data);
						NiAVObject *fingerEnd3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][2].data);

						NiPoint3 startToEnd = fingerEnd3rd->m_oldWorldTransform.pos - fingerStart3rd->m_oldWorldTransform.pos;

						NiPoint3 fingerEndZAxis = { fingerEnd3rd->m_oldWorldTransform.rot.data[0][2], fingerEnd3rd->m_oldWorldTransform.rot.data[1][2], fingerEnd3rd->m_oldWorldTransform.rot.data[2][2] };
						NiPoint3 tip = fingerEndZAxis * g_fingerTipLengths[i];

						startToEnd += tip;

						float angle = acosf(DotProduct(VectorNormalized(startToEnd), VectorNormalized(handNode3rd->m_oldWorldTransform.rot * g_fingerCurveData->zeroAngleVector[i])));
						g_fingerCurveData->fingerRangeVals[i].push_back(std::make_pair(g_fingerCurveData->currentRangeVal, std::make_pair(angle, VectorLength(startToEnd))));
					}

					g_fingerCurveData->state = FingerCurveData::State::Step;
				}

				if (g_fingerCurveData->frameCount == 4000) {
					// Save normal to the finger curve
					for (int i = 0; i < 5; i++) {
						NiAVObject *fingerStart3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][0].data);
						NiAVObject *fingerEnd3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][2].data);

						NiPoint3 startToEnd = fingerEnd3rd->m_oldWorldTransform.pos - fingerStart3rd->m_oldWorldTransform.pos;

						NiPoint3 fingerEndZAxis = { fingerEnd3rd->m_oldWorldTransform.rot.data[0][2], fingerEnd3rd->m_oldWorldTransform.rot.data[1][2], fingerEnd3rd->m_oldWorldTransform.rot.data[2][2] };
						NiPoint3 tip = fingerEndZAxis * g_fingerTipLengths[i];

						startToEnd += tip;

						NiPoint3 normal = VectorNormalized(CrossProduct(g_fingerCurveData->zeroAngleVector[i], handNode3rd->m_oldWorldTransform.rot.Transpose() * startToEnd));
						g_fingerCurveData->fingerNormal[i] = normal;
					}
				}
			}
			if (g_fingerCurveData->state == FingerCurveData::State::Finish) {
				if (g_fingerCurveData->frameCount < 100) {
					g_fingerCurveData->currentRangeVal = 0.0f;
					g_vrikInterface->setFingerRange(isLeft, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
				}
				else {
					for (int i = 0; i < 5; i++) {
						NiAVObject *fingerStart3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][0].data);
						NiAVObject *fingerEnd3rd = player->GetNiRootNode(0)->GetObjectByName(&fingerNodeNames[i][2].data);

						NiPoint3 startToEnd = fingerEnd3rd->m_oldWorldTransform.pos - fingerStart3rd->m_oldWorldTransform.pos;

						NiPoint3 fingerEndZAxis = { fingerEnd3rd->m_oldWorldTransform.rot.data[0][2], fingerEnd3rd->m_oldWorldTransform.rot.data[1][2], fingerEnd3rd->m_oldWorldTransform.rot.data[2][2] };
						NiPoint3 tip = fingerEndZAxis * g_fingerTipLengths[i];

						startToEnd += tip;

						float angle = acosf(DotProduct(VectorNormalized(startToEnd), VectorNormalized(handNode3rd->m_oldWorldTransform.rot * g_fingerCurveData->zeroAngleVector[i])));
						g_fingerCurveData->fingerRangeVals[i].push_back(std::make_pair(g_fingerCurveData->currentRangeVal, std::make_pair(angle, VectorLength(startToEnd))));
					}

					// Dump results to file
					DumpFingerCurve(g_fingerCurveData.get());

					g_fingerCurveData->state = FingerCurveData::State::Inactive;
				}
			}

			g_fingerCurveData->frameCount++;
		}
	}
}

int _LookupFingerByAngle(int fingerIndex, float desiredAngle, SavedFingerData *out)
{
	auto &fingerVals = g_fingerCurveVals[fingerIndex];
	size_t size = std::size(fingerVals);
	int left = 0;
	int right = size - 1;

	if (desiredAngle < fingerVals[left].angle) {
		// Clamp to lowest angle
		*out = fingerVals[left];
		return left;
	}

	if (desiredAngle > fingerVals[right].angle) {
		// Clamp to highest angle
		*out = fingerVals[right];
		return right;
	}

	// Binary search
	while (left <= right) {
		int middle = floor((left + right) / 2.0f);

		if (middle == size - 1) {
			*out = fingerVals[middle];
			return middle;
		}

		float angle = fingerVals[middle].angle;
		float nextAngle = fingerVals[middle + 1].angle;

		if (desiredAngle >= angle && desiredAngle < nextAngle) {
			*out = fingerVals[middle];
			return middle;
		}

		if (angle < desiredAngle) {
			left = middle + 1;
		}
		else if (angle > desiredAngle) {
			right = middle - 1;
		}
	}

	return -1;
}

int LookupFingerByAngle(int fingerIndex, float desiredAngle, SavedFingerData *out)
{
	auto &fingerVals = g_fingerCurveVals[fingerIndex];
	int size = std::size(fingerVals);

	if (desiredAngle < fingerVals[0].angle) {
		// Clamp to lowest angle
		*out = fingerVals[0];
		return 0;
	}

	// TODO: Ensure monotonic increase in angle for finger curves. Then we can go back to binary search
	/*int last = size - 1;
	if (desiredAngle > fingerVals[last][1]) {
		// Clamp to highest angle
		*out = { fingerVals[last][0], fingerVals[last][1], fingerVals[last][2] };
		return last;
	}*/

	for (int i = 0; i < size; i++) {
		if (i == size - 1) {
			*out = fingerVals[i];
			return i;
		}

		float angle = fingerVals[i].angle;
		float nextAngle = fingerVals[i + 1].angle;

		if (desiredAngle >= angle && desiredAngle < nextAngle) {
			*out = fingerVals[i];
			return i;
		}
	}

	return -1;
}

NiPoint3 g_fingerZeroAngleVecs[5] = {
{0.80688, -0.208624, 0.552649},
{0.0820723, -0.329551, 0.940564},
{0.0621934, -0.408335, 0.910711},
{-0.00978377, -0.45173, 0.892101},
{-0.0102024, -0.414763, 0.909872}
};

NiPoint3 g_fingerNormals[5] = {
{0.231529, -0.74901, -0.620788},
{0.991274, 0.124668, -0.0428164},
{0.983943, 0.178038, 0.0126321},
{0.94389, 0.290351, 0.157376},
{0.897018, 0.398296, 0.19162}
};

// open/closed value, angle (rad), finger length
SavedFingerData g_fingerCurveVals[5][201] = {
// Thumb
{
{ 1, 0, 7.46358 },
{ 0.994875, 0.00907602, 7.46322 },
{ 0.989875, 0.0187975, 7.46243 },
{ 0.984875, 0.0285811, 7.46164 },
{ 0.979875, 0.0383145, 7.46062 },
{ 0.974875, 0.0480327, 7.45933 },
{ 0.969875, 0.0577203, 7.45795 },
{ 0.964875, 0.0673849, 7.45643 },
{ 0.959875, 0.0770221, 7.45472 },
{ 0.954875, 0.0866485, 7.45282 },
{ 0.949875, 0.0962347, 7.45085 },
{ 0.944875, 0.105805, 7.44855 },
{ 0.939875, 0.115335, 7.44613 },
{ 0.934875, 0.124857, 7.44345 },
{ 0.929875, 0.134349, 7.44085 },
{ 0.924875, 0.143798, 7.43786 },
{ 0.919875, 0.153239, 7.43472 },
{ 0.914875, 0.16265, 7.43136 },
{ 0.909875, 0.172035, 7.42796 },
{ 0.904875, 0.181397, 7.42434 },
{ 0.899875, 0.190736, 7.42053 },
{ 0.894875, 0.200052, 7.4165 },
{ 0.889875, 0.209339, 7.41246 },
{ 0.884875, 0.218588, 7.40799 },
{ 0.879875, 0.227826, 7.40355 },
{ 0.874875, 0.237037, 7.39898 },
{ 0.869875, 0.246218, 7.39404 },
{ 0.864875, 0.255371, 7.38895 },
{ 0.859875, 0.264501, 7.38393 },
{ 0.854875, 0.273618, 7.37853 },
{ 0.849875, 0.282693, 7.37289 },
{ 0.844875, 0.291736, 7.36724 },
{ 0.839875, 0.300775, 7.36137 },
{ 0.834875, 0.309773, 7.35531 },
{ 0.829875, 0.318747, 7.34912 },
{ 0.824875, 0.327704, 7.34279 },
{ 0.819875, 0.336625, 7.33626 },
{ 0.814875, 0.34552, 7.32953 },
{ 0.809875, 0.3544, 7.32268 },
{ 0.804875, 0.363242, 7.31554 },
{ 0.799875, 0.372065, 7.30831 },
{ 0.794875, 0.380863, 7.301 },
{ 0.789875, 0.389619, 7.29341 },
{ 0.784875, 0.398373, 7.28564 },
{ 0.779875, 0.407088, 7.27777 },
{ 0.774875, 0.415779, 7.26967 },
{ 0.769875, 0.424434, 7.26143 },
{ 0.764875, 0.433075, 7.253 },
{ 0.759875, 0.441691, 7.24442 },
{ 0.754875, 0.450271, 7.23561 },
{ 0.749875, 0.458828, 7.22672 },
{ 0.744875, 0.467364, 7.21781 },
{ 0.739875, 0.47587, 7.20853 },
{ 0.734875, 0.484347, 7.19903 },
{ 0.729875, 0.492802, 7.1895 },
{ 0.724875, 0.501232, 7.17982 },
{ 0.719875, 0.509633, 7.16986 },
{ 0.714875, 0.518009, 7.15988 },
{ 0.709875, 0.526353, 7.14958 },
{ 0.704875, 0.534675, 7.13929 },
{ 0.699875, 0.54297, 7.12863 },
{ 0.694875, 0.551241, 7.11787 },
{ 0.689875, 0.559478, 7.10703 },
{ 0.684875, 0.5677, 7.09596 },
{ 0.679875, 0.575877, 7.08484 },
{ 0.674875, 0.584045, 7.07333 },
{ 0.669875, 0.592175, 7.06192 },
{ 0.664875, 0.60029, 7.05018 },
{ 0.659875, 0.608367, 7.03831 },
{ 0.654875, 0.616434, 7.02633 },
{ 0.649875, 0.624455, 7.01422 },
{ 0.644875, 0.632443, 7.00191 },
{ 0.639875, 0.64043, 6.98943 },
{ 0.634875, 0.64837, 6.97676 },
{ 0.629875, 0.656284, 6.96402 },
{ 0.624875, 0.664181, 6.95096 },
{ 0.619875, 0.672046, 6.93787 },
{ 0.614875, 0.679882, 6.9247 },
{ 0.609875, 0.687693, 6.91125 },
{ 0.604875, 0.695475, 6.8977 },
{ 0.599875, 0.703228, 6.88387 },
{ 0.594875, 0.710958, 6.87007 },
{ 0.589875, 0.718674, 6.85599 },
{ 0.584875, 0.726332, 6.84182 },
{ 0.579875, 0.73398, 6.82754 },
{ 0.574875, 0.741597, 6.81305 },
{ 0.569875, 0.749195, 6.79845 },
{ 0.564875, 0.756757, 6.78363 },
{ 0.559875, 0.764298, 6.76857 },
{ 0.554875, 0.771808, 6.75352 },
{ 0.549875, 0.779298, 6.73834 },
{ 0.544875, 0.78675, 6.72285 },
{ 0.539875, 0.794168, 6.70733 },
{ 0.534875, 0.801564, 6.6917 },
{ 0.529875, 0.808929, 6.67592 },
{ 0.524875, 0.816283, 6.65994 },
{ 0.519875, 0.82358, 6.64382 },
{ 0.514875, 0.830861, 6.62751 },
{ 0.509875, 0.838118, 6.61123 },
{ 0.504875, 0.845342, 6.5946 },
{ 0.499875, 0.852552, 6.57786 },
{ 0.494875, 0.85972, 6.56102 },
{ 0.489875, 0.866871, 6.54399 },
{ 0.484875, 0.873977, 6.52685 },
{ 0.479875, 0.881063, 6.50969 },
{ 0.474875, 0.888116, 6.4922 },
{ 0.469875, 0.895148, 6.47468 },
{ 0.464875, 0.902141, 6.45698 },
{ 0.459875, 0.909113, 6.43915 },
{ 0.454875, 0.916047, 6.42116 },
{ 0.449875, 0.922954, 6.40302 },
{ 0.444875, 0.929833, 6.38476 },
{ 0.439875, 0.936676, 6.36647 },
{ 0.434875, 0.943471, 6.34796 },
{ 0.429875, 0.950247, 6.32928 },
{ 0.424875, 0.95698, 6.31055 },
{ 0.419875, 0.963696, 6.29151 },
{ 0.414875, 0.970349, 6.27255 },
{ 0.409875, 0.976973, 6.25328 },
{ 0.404875, 0.98353, 6.23412 },
{ 0.399875, 0.990041, 6.21466 },
{ 0.394875, 0.996479, 6.19506 },
{ 0.389875, 1.00283, 6.17539 },
{ 0.384875, 1.00908, 6.15546 },
{ 0.379875, 1.0152, 6.13556 },
{ 0.374875, 1.02637, 6.11549 },
{ 0.369875, 1.0323, 6.09526 },
{ 0.364875, 1.03835, 6.07499 },
{ 0.359875, 1.04446, 6.05455 },
{ 0.354875, 1.05062, 6.03386 },
{ 0.349875, 1.05682, 6.01323 },
{ 0.344875, 1.06301, 5.99237 },
{ 0.339875, 1.0692, 5.97139 },
{ 0.334875, 1.07539, 5.95032 },
{ 0.329875, 1.08158, 5.92907 },
{ 0.324875, 1.08772, 5.90784 },
{ 0.319875, 1.09385, 5.88638 },
{ 0.314875, 1.09994, 5.86493 },
{ 0.309875, 1.10603, 5.84316 },
{ 0.304875, 1.11208, 5.82145 },
{ 0.299875, 1.11813, 5.79944 },
{ 0.294875, 1.12412, 5.77744 },
{ 0.289875, 1.13009, 5.75539 },
{ 0.284875, 1.13605, 5.73304 },
{ 0.279875, 1.14197, 5.71073 },
{ 0.274875, 1.14783, 5.68827 },
{ 0.269875, 1.1537, 5.6657 },
{ 0.264875, 1.15953, 5.64303 },
{ 0.259875, 1.16533, 5.62023 },
{ 0.254875, 1.17111, 5.59726 },
{ 0.249875, 1.17685, 5.5743 },
{ 0.244875, 1.18254, 5.55126 },
{ 0.239875, 1.18824, 5.52801 },
{ 0.234875, 1.19388, 5.50468 },
{ 0.229875, 1.19951, 5.48122 },
{ 0.224875, 1.2051, 5.45772 },
{ 0.219875, 1.21064, 5.43405 },
{ 0.214875, 1.21618, 5.41016 },
{ 0.209875, 1.22168, 5.38638 },
{ 0.204875, 1.22713, 5.36246 },
{ 0.199875, 1.23256, 5.33854 },
{ 0.194875, 1.23796, 5.31432 },
{ 0.189875, 1.24333, 5.29002 },
{ 0.184875, 1.24867, 5.26569 },
{ 0.179875, 1.25398, 5.24129 },
{ 0.174875, 1.25924, 5.21688 },
{ 0.169875, 1.2645, 5.19214 },
{ 0.164875, 1.2697, 5.16748 },
{ 0.159875, 1.27487, 5.14261 },
{ 0.154875, 1.28001, 5.11785 },
{ 0.149875, 1.28512, 5.09281 },
{ 0.144875, 1.2902, 5.06768 },
{ 0.139875, 1.29524, 5.04254 },
{ 0.134875, 1.30025, 5.01739 },
{ 0.129875, 1.30523, 4.99208 },
{ 0.124875, 1.31018, 4.96663 },
{ 0.119875, 1.31509, 4.94105 },
{ 0.114875, 1.31997, 4.91544 },
{ 0.109875, 1.3248, 4.88987 },
{ 0.104875, 1.32961, 4.86415 },
{ 0.099875, 1.3344, 4.83814 },
{ 0.094875, 1.33914, 4.81237 },
{ 0.089875, 1.34383, 4.7863 },
{ 0.084875, 1.34851, 4.76018 },
{ 0.079875, 1.35314, 4.73417 },
{ 0.074875, 1.35776, 4.70794 },
{ 0.069875, 1.36232, 4.68168 },
{ 0.064875, 1.36684, 4.65524 },
{ 0.059875, 1.37133, 4.62873 },
{ 0.054875, 1.3758, 4.6023 },
{ 0.049875, 1.38022, 4.57575 },
{ 0.044875, 1.3846, 4.54908 },
{ 0.039875, 1.38896, 4.52226 },
{ 0.034875, 1.39327, 4.49553 },
{ 0.029875, 1.39754, 4.46867 },
{ 0.024875, 1.40177, 4.44183 },
{ 0.019875, 1.40598, 4.41476 },
{ 0.014875, 1.41014, 4.38775 },
{ 0.009875, 1.41427, 4.36057 },
{ 0.004875, 1.41836, 4.33347 },
{ 0, 1.42262, 4.3048 },
},
// Index
{
{ 1, 0, 6.69644 },
{ 0.994875, 0.0139311, 6.69732 },
{ 0.989875, 0.0288799, 6.69812 },
{ 0.984875, 0.0438973, 6.6985 },
{ 0.979875, 0.0589087, 6.69846 },
{ 0.974875, 0.0739378, 6.69809 },
{ 0.969875, 0.0889515, 6.69759 },
{ 0.964875, 0.103961, 6.69649 },
{ 0.959875, 0.118994, 6.69508 },
{ 0.954875, 0.134006, 6.69329 },
{ 0.949875, 0.149024, 6.69137 },
{ 0.944875, 0.164048, 6.68887 },
{ 0.939875, 0.179057, 6.68609 },
{ 0.934875, 0.194078, 6.68285 },
{ 0.929875, 0.209098, 6.67946 },
{ 0.924875, 0.224119, 6.67553 },
{ 0.919875, 0.239127, 6.67138 },
{ 0.914875, 0.254157, 6.66678 },
{ 0.909875, 0.269166, 6.66193 },
{ 0.904875, 0.284181, 6.65676 },
{ 0.899875, 0.299194, 6.65122 },
{ 0.894875, 0.314218, 6.6452 },
{ 0.889875, 0.329222, 6.63892 },
{ 0.884875, 0.344248, 6.63226 },
{ 0.879875, 0.359249, 6.62537 },
{ 0.874875, 0.374253, 6.61804 },
{ 0.869875, 0.389277, 6.61029 },
{ 0.864875, 0.404283, 6.60234 },
{ 0.859875, 0.419273, 6.59397 },
{ 0.854875, 0.434285, 6.58523 },
{ 0.849875, 0.449296, 6.57625 },
{ 0.844875, 0.46429, 6.56694 },
{ 0.839875, 0.479304, 6.55704 },
{ 0.834875, 0.494299, 6.547 },
{ 0.829875, 0.509295, 6.53667 },
{ 0.824875, 0.524283, 6.52592 },
{ 0.819875, 0.539284, 6.51473 },
{ 0.814875, 0.554272, 6.50332 },
{ 0.809875, 0.569263, 6.49154 },
{ 0.804875, 0.584253, 6.47941 },
{ 0.799875, 0.599237, 6.46703 },
{ 0.794875, 0.61422, 6.45423 },
{ 0.789875, 0.629202, 6.44115 },
{ 0.784875, 0.644187, 6.42766 },
{ 0.779875, 0.659152, 6.41388 },
{ 0.774875, 0.674141, 6.39979 },
{ 0.769875, 0.689101, 6.38535 },
{ 0.764875, 0.704083, 6.37058 },
{ 0.759875, 0.719024, 6.35544 },
{ 0.754875, 0.733986, 6.33997 },
{ 0.749875, 0.748953, 6.32425 },
{ 0.744875, 0.763903, 6.3082 },
{ 0.739875, 0.778865, 6.29171 },
{ 0.734875, 0.793809, 6.27496 },
{ 0.729875, 0.808745, 6.25795 },
{ 0.724875, 0.823701, 6.24046 },
{ 0.719875, 0.838635, 6.22281 },
{ 0.714875, 0.853556, 6.20481 },
{ 0.709875, 0.8685, 6.18645 },
{ 0.704875, 0.883415, 6.16782 },
{ 0.699875, 0.898347, 6.14888 },
{ 0.694875, 0.913252, 6.12959 },
{ 0.689875, 0.928172, 6.10995 },
{ 0.684875, 0.943081, 6.09007 },
{ 0.679875, 0.957986, 6.06984 },
{ 0.674875, 0.972873, 6.04937 },
{ 0.669875, 0.987789, 6.02845 },
{ 0.664875, 1.00268, 6.00742 },
{ 0.659875, 1.01756, 5.98599 },
{ 0.654875, 1.03244, 5.96413 },
{ 0.649875, 1.04731, 5.9421 },
{ 0.644875, 1.06218, 5.91979 },
{ 0.639875, 1.07705, 5.89714 },
{ 0.634875, 1.09189, 5.87421 },
{ 0.629875, 1.10674, 5.851 },
{ 0.624875, 1.12159, 5.82748 },
{ 0.619875, 1.13644, 5.80364 },
{ 0.614875, 1.15124, 5.77966 },
{ 0.609875, 1.16608, 5.75523 },
{ 0.604875, 1.1809, 5.7305 },
{ 0.599875, 1.19572, 5.70555 },
{ 0.594875, 1.21052, 5.68034 },
{ 0.589875, 1.22531, 5.65482 },
{ 0.584875, 1.24011, 5.62905 },
{ 0.579875, 1.25489, 5.60295 },
{ 0.574875, 1.26965, 5.57662 },
{ 0.569875, 1.28444, 5.54996 },
{ 0.564875, 1.29918, 5.52308 },
{ 0.559875, 1.31393, 5.49587 },
{ 0.554875, 1.32866, 5.46847 },
{ 0.549875, 1.3434, 5.44074 },
{ 0.544875, 1.35812, 5.4128 },
{ 0.539875, 1.37283, 5.38451 },
{ 0.534875, 1.38755, 5.356 },
{ 0.529875, 1.40224, 5.32737 },
{ 0.524875, 1.41692, 5.29829 },
{ 0.519875, 1.43159, 5.26908 },
{ 0.514875, 1.44624, 5.23965 },
{ 0.509875, 1.46089, 5.20982 },
{ 0.504875, 1.47552, 5.17985 },
{ 0.499875, 1.49017, 5.14965 },
{ 0.494875, 1.50479, 5.11907 },
{ 0.489875, 1.51941, 5.08833 },
{ 0.484875, 1.53399, 5.0574 },
{ 0.479875, 1.54857, 5.02616 },
{ 0.474875, 1.56312, 4.99472 },
{ 0.469875, 1.57766, 4.96305 },
{ 0.464875, 1.59222, 4.93118 },
{ 0.459875, 1.60674, 4.89901 },
{ 0.454875, 1.62126, 4.86665 },
{ 0.449875, 1.63575, 4.8341 },
{ 0.444875, 1.65023, 4.80135 },
{ 0.439875, 1.66471, 4.76826 },
{ 0.434875, 1.67915, 4.73501 },
{ 0.429875, 1.69359, 4.70156 },
{ 0.424875, 1.70799, 4.66789 },
{ 0.419875, 1.7224, 4.63409 },
{ 0.414875, 1.73677, 4.59995 },
{ 0.409875, 1.75112, 4.56571 },
{ 0.404875, 1.76547, 4.53124 },
{ 0.399875, 1.7798, 4.49655 },
{ 0.394875, 1.79411, 4.46167 },
{ 0.389875, 1.80838, 4.42656 },
{ 0.384875, 1.82266, 4.3914 },
{ 0.379875, 1.83687, 4.35591 },
{ 0.374875, 1.8511, 4.32032 },
{ 0.369875, 1.86528, 4.28442 },
{ 0.364875, 1.87944, 4.24848 },
{ 0.359875, 1.89359, 4.21228 },
{ 0.354875, 1.90772, 4.17592 },
{ 0.349875, 1.92179, 4.13946 },
{ 0.344875, 1.93588, 4.10278 },
{ 0.339875, 1.94989, 4.06591 },
{ 0.334875, 1.96393, 4.02885 },
{ 0.329875, 1.97791, 3.9917 },
{ 0.324875, 1.99183, 3.95444 },
{ 0.319875, 2.00576, 3.91679 },
{ 0.314875, 2.01963, 3.87919 },
{ 0.309875, 2.03346, 3.84145 },
{ 0.304875, 2.04727, 3.80351 },
{ 0.299875, 2.06107, 3.76532 },
{ 0.294875, 2.0748, 3.72715 },
{ 0.289875, 2.08851, 3.6888 },
{ 0.284875, 2.10216, 3.65031 },
{ 0.279875, 2.11581, 3.61166 },
{ 0.274875, 2.12936, 3.57279 },
{ 0.269875, 2.14288, 3.53398 },
{ 0.264875, 2.15639, 3.49495 },
{ 0.259875, 2.16981, 3.45581 },
{ 0.254875, 2.1832, 3.41655 },
{ 0.249875, 2.19656, 3.37719 },
{ 0.244875, 2.20982, 3.33771 },
{ 0.239875, 2.22303, 3.29807 },
{ 0.234875, 2.23622, 3.25844 },
{ 0.229875, 2.24934, 3.21868 },
{ 0.224875, 2.26239, 3.17869 },
{ 0.219875, 2.27538, 3.13873 },
{ 0.214875, 2.28828, 3.09863 },
{ 0.209875, 2.30113, 3.05843 },
{ 0.204875, 2.31391, 3.01818 },
{ 0.199875, 2.32659, 2.97794 },
{ 0.194875, 2.33924, 2.93748 },
{ 0.189875, 2.35177, 2.89699 },
{ 0.184875, 2.36421, 2.85644 },
{ 0.179875, 2.37661, 2.8158 },
{ 0.174875, 2.38888, 2.77518 },
{ 0.169875, 2.40105, 2.73437 },
{ 0.164875, 2.41312, 2.69355 },
{ 0.159875, 2.42511, 2.65282 },
{ 0.154875, 2.437, 2.61176 },
{ 0.149875, 2.44878, 2.57089 },
{ 0.144875, 2.46038, 2.52987 },
{ 0.139875, 2.47193, 2.48896 },
{ 0.134875, 2.4833, 2.44789 },
{ 0.129875, 2.49451, 2.40684 },
{ 0.124875, 2.50564, 2.36566 },
{ 0.119875, 2.5166, 2.32462 },
{ 0.114875, 2.52736, 2.28331 },
{ 0.109875, 2.53802, 2.24224 },
{ 0.104875, 2.54848, 2.20109 },
{ 0.099875, 2.55872, 2.15999 },
{ 0.094875, 2.56881, 2.1189 },
{ 0.089875, 2.57871, 2.07766 },
{ 0.084875, 2.5884, 2.03657 },
{ 0.079875, 2.59783, 1.99548 },
{ 0.074875, 2.60702, 1.95441 },
{ 0.069875, 2.61602, 1.91334 },
{ 0.064875, 2.62478, 1.87238 },
{ 0.059875, 2.63321, 1.83154 },
{ 0.054875, 2.64138, 1.79063 },
{ 0.049875, 2.64917, 1.74993 },
{ 0.044875, 2.65671, 1.70914 },
{ 0.039875, 2.66397, 1.66846 },
{ 0.034875, 2.6708, 1.62791 },
{ 0.029875, 2.67728, 1.58744 },
{ 0.024875, 2.6833, 1.54718 },
{ 0.019875, 2.68898, 1.50695 },
{ 0.014875, 2.69411, 1.46673 },
{ 0.009875, 2.69884, 1.42694 },
{ 0.004875, 2.70294, 1.38708 },
{ 0, 2.70674, 1.34557 },
},
// Middle
{
{ 1, 0, 7.2235 },
{ 0.994875, 0.0125964, 7.22219 },
{ 0.989875, 0.0260381, 7.22038 },
{ 0.984875, 0.0395443, 7.21844 },
{ 0.979875, 0.053046, 7.21602 },
{ 0.974875, 0.0665602, 7.21359 },
{ 0.969875, 0.080066, 7.21064 },
{ 0.964875, 0.0935632, 7.20748 },
{ 0.959875, 0.107072, 7.204 },
{ 0.954875, 0.120577, 7.20021 },
{ 0.949875, 0.13408, 7.19621 },
{ 0.944875, 0.147577, 7.19184 },
{ 0.939875, 0.161081, 7.18731 },
{ 0.934875, 0.174582, 7.18245 },
{ 0.929875, 0.188077, 7.1773 },
{ 0.924875, 0.201577, 7.17186 },
{ 0.919875, 0.215065, 7.16608 },
{ 0.914875, 0.228568, 7.16009 },
{ 0.909875, 0.242062, 7.15381 },
{ 0.904875, 0.255547, 7.1472 },
{ 0.899875, 0.269041, 7.14038 },
{ 0.894875, 0.282519, 7.13325 },
{ 0.889875, 0.296019, 7.12577 },
{ 0.884875, 0.309511, 7.11807 },
{ 0.879875, 0.322982, 7.11022 },
{ 0.874875, 0.33647, 7.10185 },
{ 0.869875, 0.349939, 7.09331 },
{ 0.864875, 0.363412, 7.08452 },
{ 0.859875, 0.376881, 7.07542 },
{ 0.854875, 0.390363, 7.06597 },
{ 0.849875, 0.40382, 7.05639 },
{ 0.844875, 0.417291, 7.0465 },
{ 0.839875, 0.430755, 7.03618 },
{ 0.834875, 0.444206, 7.02581 },
{ 0.829875, 0.457671, 7.0151 },
{ 0.824875, 0.471126, 7.00398 },
{ 0.819875, 0.484574, 6.99277 },
{ 0.814875, 0.498027, 6.98107 },
{ 0.809875, 0.511482, 6.96915 },
{ 0.804875, 0.524911, 6.95721 },
{ 0.799875, 0.538354, 6.94476 },
{ 0.794875, 0.551777, 6.93221 },
{ 0.789875, 0.565215, 6.91914 },
{ 0.784875, 0.578636, 6.90598 },
{ 0.779875, 0.592056, 6.8925 },
{ 0.774875, 0.605492, 6.87867 },
{ 0.769875, 0.618901, 6.86473 },
{ 0.764875, 0.63232, 6.85053 },
{ 0.759875, 0.645715, 6.83594 },
{ 0.754875, 0.659114, 6.82113 },
{ 0.749875, 0.672515, 6.80602 },
{ 0.744875, 0.685909, 6.79065 },
{ 0.739875, 0.699296, 6.77511 },
{ 0.734875, 0.712673, 6.75926 },
{ 0.729875, 0.726052, 6.7431 },
{ 0.724875, 0.739426, 6.72673 },
{ 0.719875, 0.752794, 6.71011 },
{ 0.714875, 0.766165, 6.6932 },
{ 0.709875, 0.779509, 6.67606 },
{ 0.704875, 0.792861, 6.65869 },
{ 0.699875, 0.806213, 6.64104 },
{ 0.694875, 0.819543, 6.62307 },
{ 0.689875, 0.832891, 6.60496 },
{ 0.684875, 0.846208, 6.58651 },
{ 0.679875, 0.859541, 6.56786 },
{ 0.674875, 0.872837, 6.54898 },
{ 0.669875, 0.88615, 6.52977 },
{ 0.664875, 0.899449, 6.51038 },
{ 0.659875, 0.912774, 6.49063 },
{ 0.654875, 0.926039, 6.47074 },
{ 0.649875, 0.939326, 6.45062 },
{ 0.644875, 0.9526, 6.43019 },
{ 0.639875, 0.965867, 6.40962 },
{ 0.634875, 0.979126, 6.38874 },
{ 0.629875, 0.992366, 6.36764 },
{ 0.624875, 1.00562, 6.34624 },
{ 0.619875, 1.01885, 6.32472 },
{ 0.614875, 1.03207, 6.30297 },
{ 0.609875, 1.04529, 6.28086 },
{ 0.604875, 1.05849, 6.25861 },
{ 0.599875, 1.07171, 6.23606 },
{ 0.594875, 1.08489, 6.21325 },
{ 0.589875, 1.09808, 6.1903 },
{ 0.584875, 1.11126, 6.16715 },
{ 0.579875, 1.1244, 6.14368 },
{ 0.574875, 1.13756, 6.1201 },
{ 0.569875, 1.15071, 6.09613 },
{ 0.564875, 1.16385, 6.07204 },
{ 0.559875, 1.17696, 6.04773 },
{ 0.554875, 1.19008, 6.02319 },
{ 0.549875, 1.20318, 5.9985 },
{ 0.544875, 1.21627, 5.97346 },
{ 0.539875, 1.22936, 5.94819 },
{ 0.534875, 1.24241, 5.92282 },
{ 0.529875, 1.25547, 5.89719 },
{ 0.524875, 1.26853, 5.87146 },
{ 0.519875, 1.28156, 5.8454 },
{ 0.514875, 1.29456, 5.81917 },
{ 0.509875, 1.30757, 5.79269 },
{ 0.504875, 1.32055, 5.76607 },
{ 0.499875, 1.33354, 5.73919 },
{ 0.494875, 1.3465, 5.71218 },
{ 0.489875, 1.35947, 5.6849 },
{ 0.484875, 1.37239, 5.65743 },
{ 0.479875, 1.38534, 5.62977 },
{ 0.474875, 1.39824, 5.60189 },
{ 0.469875, 1.41113, 5.57397 },
{ 0.464875, 1.42403, 5.54567 },
{ 0.459875, 1.43689, 5.51722 },
{ 0.454875, 1.44974, 5.48856 },
{ 0.449875, 1.46256, 5.45981 },
{ 0.444875, 1.47538, 5.43088 },
{ 0.439875, 1.48817, 5.4017 },
{ 0.434875, 1.50094, 5.3723 },
{ 0.429875, 1.51371, 5.34286 },
{ 0.424875, 1.52647, 5.31315 },
{ 0.419875, 1.5392, 5.28325 },
{ 0.414875, 1.5519, 5.25317 },
{ 0.409875, 1.56456, 5.223 },
{ 0.404875, 1.57726, 5.19264 },
{ 0.399875, 1.58991, 5.1621 },
{ 0.394875, 1.60253, 5.1313 },
{ 0.389875, 1.61514, 5.10045 },
{ 0.384875, 1.62774, 5.06944 },
{ 0.379875, 1.64028, 5.03822 },
{ 0.374875, 1.65282, 5.0068 },
{ 0.369875, 1.66535, 4.97537 },
{ 0.364875, 1.6778, 4.94363 },
{ 0.359875, 1.69028, 4.91188 },
{ 0.354875, 1.70272, 4.87988 },
{ 0.349875, 1.71514, 4.84775 },
{ 0.344875, 1.72754, 4.81543 },
{ 0.339875, 1.73989, 4.78312 },
{ 0.334875, 1.75224, 4.75056 },
{ 0.329875, 1.76456, 4.71783 },
{ 0.324875, 1.77683, 4.68501 },
{ 0.319875, 1.78908, 4.65211 },
{ 0.314875, 1.80129, 4.61899 },
{ 0.309875, 1.81347, 4.58572 },
{ 0.304875, 1.82565, 4.55242 },
{ 0.299875, 1.83778, 4.51887 },
{ 0.294875, 1.84988, 4.48531 },
{ 0.289875, 1.8619, 4.45157 },
{ 0.284875, 1.87394, 4.41769 },
{ 0.279875, 1.88592, 4.38376 },
{ 0.274875, 1.89788, 4.34972 },
{ 0.269875, 1.90978, 4.31557 },
{ 0.264875, 1.92166, 4.28116 },
{ 0.259875, 1.9335, 4.24674 },
{ 0.254875, 1.94528, 4.21223 },
{ 0.249875, 1.95705, 4.17762 },
{ 0.244875, 1.96875, 4.14285 },
{ 0.239875, 1.98041, 4.10815 },
{ 0.234875, 1.99202, 4.07324 },
{ 0.229875, 2.0036, 4.03816 },
{ 0.224875, 2.01512, 4.00315 },
{ 0.219875, 2.02661, 3.96797 },
{ 0.214875, 2.03805, 3.9326 },
{ 0.209875, 2.04942, 3.89734 },
{ 0.204875, 2.06072, 3.86188 },
{ 0.199875, 2.07201, 3.82648 },
{ 0.194875, 2.0832, 3.79081 },
{ 0.189875, 2.09435, 3.75514 },
{ 0.184875, 2.10543, 3.71948 },
{ 0.179875, 2.11646, 3.68366 },
{ 0.174875, 2.12744, 3.64787 },
{ 0.169875, 2.13833, 3.6119 },
{ 0.164875, 2.14918, 3.57596 },
{ 0.159875, 2.15991, 3.53996 },
{ 0.154875, 2.17064, 3.50391 },
{ 0.149875, 2.18125, 3.46774 },
{ 0.144875, 2.19181, 3.43158 },
{ 0.139875, 2.20229, 3.39546 },
{ 0.134875, 2.21264, 3.35924 },
{ 0.129875, 2.22296, 3.32291 },
{ 0.124875, 2.23317, 3.28672 },
{ 0.119875, 2.24332, 3.25031 },
{ 0.114875, 2.25335, 3.21391 },
{ 0.109875, 2.26333, 3.1776 },
{ 0.104875, 2.27316, 3.14127 },
{ 0.099875, 2.28291, 3.10483 },
{ 0.094875, 2.29256, 3.06842 },
{ 0.089875, 2.30209, 3.0321 },
{ 0.084875, 2.31155, 2.99562 },
{ 0.079875, 2.32084, 2.95929 },
{ 0.074875, 2.33004, 2.92283 },
{ 0.069875, 2.33913, 2.88653 },
{ 0.064875, 2.34806, 2.85011 },
{ 0.059875, 2.35687, 2.81384 },
{ 0.054875, 2.36558, 2.77747 },
{ 0.049875, 2.37414, 2.74129 },
{ 0.044875, 2.38252, 2.70499 },
{ 0.039875, 2.39079, 2.66885 },
{ 0.034875, 2.39886, 2.63257 },
{ 0.029875, 2.40679, 2.59652 },
{ 0.024875, 2.41457, 2.5604 },
{ 0.019875, 2.42221, 2.52448 },
{ 0.014875, 2.42961, 2.48852 },
{ 0.009875, 2.43681, 2.45273 },
{ 0.004875, 2.44388, 2.41703 },
{ 0, 2.45103, 2.37952 },
},
// Ring
{
{ 1, 0, 6.16055 },
{ 0.994875, 0.0132198, 6.16342 },
{ 0.989875, 0.0273686, 6.16619 },
{ 0.984875, 0.0415829, 6.16855 },
{ 0.979875, 0.0558135, 6.17059 },
{ 0.974875, 0.0700423, 6.1722 },
{ 0.969875, 0.0842637, 6.17353 },
{ 0.964875, 0.0984869, 6.17458 },
{ 0.959875, 0.112734, 6.17502 },
{ 0.954875, 0.126975, 6.17529 },
{ 0.949875, 0.141206, 6.17509 },
{ 0.944875, 0.155452, 6.17454 },
{ 0.939875, 0.16968, 6.17373 },
{ 0.934875, 0.18395, 6.17248 },
{ 0.929875, 0.198186, 6.17086 },
{ 0.924875, 0.21244, 6.16892 },
{ 0.919875, 0.226689, 6.16645 },
{ 0.914875, 0.240951, 6.16376 },
{ 0.909875, 0.255202, 6.16062 },
{ 0.904875, 0.269442, 6.15728 },
{ 0.899875, 0.28371, 6.15342 },
{ 0.894875, 0.297953, 6.14927 },
{ 0.889875, 0.312212, 6.14473 },
{ 0.884875, 0.326471, 6.13974 },
{ 0.879875, 0.340688, 6.13467 },
{ 0.874875, 0.354955, 6.12894 },
{ 0.869875, 0.369196, 6.12296 },
{ 0.864875, 0.383434, 6.11662 },
{ 0.859875, 0.397683, 6.11004 },
{ 0.854875, 0.411933, 6.10292 },
{ 0.849875, 0.426162, 6.09549 },
{ 0.844875, 0.440392, 6.08779 },
{ 0.839875, 0.45462, 6.07952 },
{ 0.834875, 0.468849, 6.07108 },
{ 0.829875, 0.48307, 6.0622 },
{ 0.824875, 0.497286, 6.053 },
{ 0.819875, 0.511493, 6.04347 },
{ 0.814875, 0.525708, 6.03359 },
{ 0.809875, 0.539913, 6.02327 },
{ 0.804875, 0.554099, 6.01272 },
{ 0.799875, 0.568291, 6.00176 },
{ 0.794875, 0.582474, 5.99043 },
{ 0.789875, 0.596657, 5.97881 },
{ 0.784875, 0.61082, 5.96677 },
{ 0.779875, 0.62497, 5.95438 },
{ 0.774875, 0.639125, 5.94182 },
{ 0.769875, 0.653306, 5.9287 },
{ 0.764875, 0.667422, 5.91529 },
{ 0.759875, 0.68156, 5.9016 },
{ 0.754875, 0.695688, 5.88757 },
{ 0.749875, 0.709808, 5.87308 },
{ 0.744875, 0.723904, 5.85833 },
{ 0.739875, 0.737996, 5.84333 },
{ 0.734875, 0.752079, 5.82784 },
{ 0.729875, 0.766163, 5.81219 },
{ 0.724875, 0.780201, 5.79603 },
{ 0.719875, 0.794265, 5.77967 },
{ 0.714875, 0.8083, 5.76298 },
{ 0.709875, 0.822326, 5.74586 },
{ 0.704875, 0.83634, 5.72848 },
{ 0.699875, 0.850335, 5.71084 },
{ 0.694875, 0.86432, 5.69282 },
{ 0.689875, 0.878308, 5.67447 },
{ 0.684875, 0.892267, 5.65579 },
{ 0.679875, 0.906205, 5.63682 },
{ 0.674875, 0.92014, 5.61752 },
{ 0.669875, 0.934059, 5.59786 },
{ 0.664875, 0.947953, 5.5781 },
{ 0.659875, 0.96184, 5.55781 },
{ 0.654875, 0.975697, 5.53734 },
{ 0.649875, 0.989539, 5.51648 },
{ 0.644875, 1.00338, 5.49539 },
{ 0.639875, 1.01719, 5.4739 },
{ 0.634875, 1.03097, 5.45218 },
{ 0.629875, 1.04475, 5.4302 },
{ 0.624875, 1.05849, 5.40796 },
{ 0.619875, 1.07225, 5.38529 },
{ 0.614875, 1.08593, 5.36242 },
{ 0.609875, 1.09964, 5.33928 },
{ 0.604875, 1.11331, 5.31585 },
{ 0.599875, 1.12696, 5.29208 },
{ 0.594875, 1.14057, 5.26815 },
{ 0.589875, 1.15418, 5.24386 },
{ 0.584875, 1.16775, 5.2193 },
{ 0.579875, 1.1813, 5.19453 },
{ 0.574875, 1.1948, 5.1694 },
{ 0.569875, 1.20832, 5.14414 },
{ 0.564875, 1.22179, 5.11851 },
{ 0.559875, 1.23522, 5.09258 },
{ 0.554875, 1.24862, 5.0665 },
{ 0.549875, 1.262, 5.04023 },
{ 0.544875, 1.27536, 5.01351 },
{ 0.539875, 1.28869, 4.9867 },
{ 0.534875, 1.30198, 4.95961 },
{ 0.529875, 1.31525, 4.9322 },
{ 0.524875, 1.32847, 4.90463 },
{ 0.519875, 1.34163, 4.8769 },
{ 0.514875, 1.35479, 4.84896 },
{ 0.509875, 1.36791, 4.82064 },
{ 0.504875, 1.38099, 4.79217 },
{ 0.499875, 1.39401, 4.7634 },
{ 0.494875, 1.40703, 4.73455 },
{ 0.489875, 1.42, 4.70537 },
{ 0.484875, 1.43292, 4.67594 },
{ 0.479875, 1.44583, 4.64646 },
{ 0.474875, 1.45864, 4.61668 },
{ 0.469875, 1.47144, 4.58664 },
{ 0.464875, 1.48419, 4.55658 },
{ 0.459875, 1.49691, 4.52622 },
{ 0.454875, 1.50957, 4.49575 },
{ 0.449875, 1.52215, 4.46492 },
{ 0.444875, 1.53472, 4.43402 },
{ 0.439875, 1.54724, 4.40308 },
{ 0.434875, 1.55966, 4.37174 },
{ 0.429875, 1.57205, 4.34035 },
{ 0.424875, 1.58441, 4.30873 },
{ 0.419875, 1.5967, 4.27711 },
{ 0.414875, 1.60892, 4.24521 },
{ 0.409875, 1.62107, 4.21319 },
{ 0.404875, 1.63319, 4.18104 },
{ 0.399875, 1.64522, 4.1487 },
{ 0.394875, 1.65722, 4.11622 },
{ 0.389875, 1.66913, 4.08353 },
{ 0.384875, 1.68096, 4.05091 },
{ 0.379875, 1.69273, 4.01807 },
{ 0.374875, 1.70442, 3.98514 },
{ 0.369875, 1.71604, 3.95205 },
{ 0.364875, 1.7276, 3.91888 },
{ 0.359875, 1.73903, 3.88554 },
{ 0.354875, 1.75042, 3.85215 },
{ 0.349875, 1.76173, 3.81873 },
{ 0.344875, 1.77294, 3.78517 },
{ 0.339875, 1.78406, 3.75159 },
{ 0.334875, 1.79512, 3.71781 },
{ 0.329875, 1.80603, 3.68402 },
{ 0.324875, 1.81688, 3.65016 },
{ 0.319875, 1.8276, 3.61628 },
{ 0.314875, 1.83824, 3.58229 },
{ 0.309875, 1.84879, 3.54823 },
{ 0.304875, 1.8592, 3.51426 },
{ 0.299875, 1.86955, 3.4802 },
{ 0.294875, 1.87971, 3.44597 },
{ 0.289875, 1.88985, 3.41188 },
{ 0.284875, 1.89977, 3.37773 },
{ 0.279875, 1.90963, 3.3436 },
{ 0.274875, 1.91936, 3.30945 },
{ 0.269875, 1.92892, 3.27526 },
{ 0.264875, 1.93839, 3.24111 },
{ 0.259875, 1.94768, 3.20695 },
{ 0.254875, 1.95684, 3.17288 },
{ 0.249875, 1.96588, 3.13888 },
{ 0.244875, 1.97469, 3.10489 },
{ 0.239875, 1.98342, 3.071 },
{ 0.234875, 1.99198, 3.03697 },
{ 0.229875, 2.00034, 3.00329 },
{ 0.224875, 2.00855, 2.96946 },
{ 0.219875, 2.01657, 2.9358 },
{ 0.214875, 2.0244, 2.90228 },
{ 0.209875, 2.03205, 2.86876 },
{ 0.204875, 2.03955, 2.83557 },
{ 0.199875, 2.04676, 2.80227 },
{ 0.194875, 2.05382, 2.76919 },
{ 0.189875, 2.06065, 2.73623 },
{ 0.184875, 2.06725, 2.70352 },
{ 0.179875, 2.07366, 2.67092 },
{ 0.174875, 2.07984, 2.63859 },
{ 0.169875, 2.08577, 2.60633 },
{ 0.164875, 2.09143, 2.57428 },
{ 0.159875, 2.09692, 2.54258 },
{ 0.154875, 2.10206, 2.51091 },
{ 0.149875, 2.107, 2.47962 },
{ 0.144875, 2.11159, 2.44862 },
{ 0.139875, 2.11597, 2.41788 },
{ 0.134875, 2.12005, 2.38737 },
{ 0.129875, 2.12382, 2.35717 },
{ 0.124875, 2.1273, 2.32718 },
{ 0.119875, 2.13047, 2.29768 },
{ 0.114875, 2.13329, 2.26853 },
{ 0.109875, 2.13579, 2.23973 },
{ 0.104875, 2.13797, 2.21125 },
{ 0.099875, 2.13984, 2.18329 },
{ 0.094875, 2.14131, 2.15569 },
{ 0.089875, 2.14243, 2.12847 },
{ 0.084875, 2.14322, 2.10167 },
{ 0.079875, 2.14365, 2.07545 },
{ 0.074875, 2.14369, 2.04964 },
{ 0.069875, 2.14339, 2.02441 },
{ 0.064875, 2.14263, 1.99961 },
{ 0.059875, 2.1415, 1.97546 },
{ 0.054875, 2.14003, 1.95195 },
{ 0.049875, 2.13809, 1.92891 },
{ 0.044875, 2.13583, 1.90644 },
{ 0.039875, 2.13314, 1.88467 },
{ 0.034875, 2.13015, 1.86363 },
{ 0.029875, 2.12664, 1.84322 },
{ 0.024875, 2.12282, 1.82353 },
{ 0.019875, 2.11855, 1.80447 },
{ 0.014875, 2.11392, 1.78618 },
{ 0.009875, 2.10896, 1.76873 },
{ 0.004875, 2.10356, 1.75204 },
{ 0, 2.09759, 1.73535 },

},
// Pinky
{
{ 1, 0.000345267, 5.19532 },
{ 0.994875, 0.0147216, 5.19319 },
{ 0.989875, 0.0304082, 5.19078 },
{ 0.984875, 0.0461732, 5.18797 },
{ 0.979875, 0.0619235, 5.18498 },
{ 0.974875, 0.0777015, 5.1816 },
{ 0.969875, 0.0934637, 5.17804 },
{ 0.964875, 0.109214, 5.17398 },
{ 0.959875, 0.124999, 5.16978 },
{ 0.954875, 0.140749, 5.16518 },
{ 0.949875, 0.156501, 5.16038 },
{ 0.944875, 0.172259, 5.1552 },
{ 0.939875, 0.188, 5.1497 },
{ 0.934875, 0.203756, 5.14402 },
{ 0.929875, 0.219494, 5.13792 },
{ 0.924875, 0.235238, 5.13148 },
{ 0.919875, 0.250971, 5.12502 },
{ 0.914875, 0.266714, 5.11805 },
{ 0.909875, 0.282431, 5.11068 },
{ 0.904875, 0.298143, 5.10314 },
{ 0.899875, 0.313876, 5.09535 },
{ 0.894875, 0.329579, 5.08734 },
{ 0.889875, 0.345292, 5.07888 },
{ 0.884875, 0.361014, 5.0702 },
{ 0.879875, 0.37671, 5.0612 },
{ 0.874875, 0.392398, 5.05188 },
{ 0.869875, 0.408097, 5.04222 },
{ 0.864875, 0.423765, 5.03254 },
{ 0.859875, 0.439463, 5.02221 },
{ 0.854875, 0.45514, 5.0118 },
{ 0.849875, 0.470784, 5.00123 },
{ 0.844875, 0.486449, 4.9901 },
{ 0.839875, 0.502119, 4.97886 },
{ 0.834875, 0.517751, 4.96732 },
{ 0.829875, 0.533395, 4.95537 },
{ 0.824875, 0.549034, 4.94323 },
{ 0.819875, 0.564644, 4.93077 },
{ 0.814875, 0.580258, 4.91814 },
{ 0.809875, 0.595877, 4.90515 },
{ 0.804875, 0.611485, 4.89191 },
{ 0.799875, 0.627071, 4.87836 },
{ 0.794875, 0.642658, 4.86462 },
{ 0.789875, 0.658239, 4.85052 },
{ 0.784875, 0.673813, 4.83611 },
{ 0.779875, 0.689364, 4.82147 },
{ 0.774875, 0.704907, 4.80668 },
{ 0.769875, 0.720461, 4.79141 },
{ 0.764875, 0.73599, 4.77597 },
{ 0.759875, 0.751524, 4.7603 },
{ 0.754875, 0.767013, 4.74436 },
{ 0.749875, 0.782525, 4.72806 },
{ 0.744875, 0.798013, 4.71159 },
{ 0.739875, 0.813499, 4.69483 },
{ 0.734875, 0.828953, 4.67786 },
{ 0.729875, 0.844419, 4.6606 },
{ 0.724875, 0.859842, 4.64297 },
{ 0.719875, 0.875283, 4.62525 },
{ 0.714875, 0.890707, 4.60717 },
{ 0.709875, 0.906119, 4.58883 },
{ 0.704875, 0.9215, 4.57037 },
{ 0.699875, 0.936874, 4.55163 },
{ 0.694875, 0.952238, 4.53252 },
{ 0.689875, 0.967603, 4.51317 },
{ 0.684875, 0.982945, 4.49369 },
{ 0.679875, 0.99823, 4.47393 },
{ 0.674875, 1.01356, 4.45392 },
{ 0.669875, 1.02883, 4.43366 },
{ 0.664875, 1.04412, 4.4132 },
{ 0.659875, 1.05939, 4.39242 },
{ 0.654875, 1.07462, 4.37143 },
{ 0.649875, 1.08984, 4.35028 },
{ 0.644875, 1.10504, 4.32883 },
{ 0.639875, 1.12023, 4.30715 },
{ 0.634875, 1.13538, 4.2853 },
{ 0.629875, 1.15055, 4.26318 },
{ 0.624875, 1.16568, 4.2409 },
{ 0.619875, 1.18077, 4.21833 },
{ 0.614875, 1.19585, 4.19557 },
{ 0.609875, 1.21092, 4.17268 },
{ 0.604875, 1.22598, 4.14956 },
{ 0.599875, 1.24099, 4.12603 },
{ 0.594875, 1.25601, 4.10247 },
{ 0.589875, 1.27095, 4.07862 },
{ 0.584875, 1.28591, 4.05451 },
{ 0.579875, 1.30084, 4.0303 },
{ 0.574875, 1.31574, 4.00598 },
{ 0.569875, 1.33061, 3.98139 },
{ 0.564875, 1.34546, 3.95648 },
{ 0.559875, 1.36031, 3.93147 },
{ 0.554875, 1.37509, 3.90629 },
{ 0.549875, 1.38983, 3.88096 },
{ 0.544875, 1.4046, 3.8553 },
{ 0.539875, 1.41928, 3.82952 },
{ 0.534875, 1.43398, 3.8036 },
{ 0.529875, 1.4486, 3.77742 },
{ 0.524875, 1.46322, 3.75114 },
{ 0.519875, 1.47779, 3.72458 },
{ 0.514875, 1.49231, 3.69804 },
{ 0.509875, 1.50683, 3.67116 },
{ 0.504875, 1.5213, 3.64414 },
{ 0.499875, 1.53574, 3.61698 },
{ 0.494875, 1.55016, 3.58969 },
{ 0.489875, 1.56448, 3.56212 },
{ 0.484875, 1.57879, 3.53449 },
{ 0.479875, 1.59311, 3.50665 },
{ 0.474875, 1.60733, 3.4787 },
{ 0.469875, 1.62148, 3.4506 },
{ 0.464875, 1.63565, 3.42233 },
{ 0.459875, 1.64973, 3.394 },
{ 0.454875, 1.6638, 3.3655 },
{ 0.449875, 1.67778, 3.33669 },
{ 0.444875, 1.69174, 3.30789 },
{ 0.439875, 1.70563, 3.27892 },
{ 0.434875, 1.71947, 3.24986 },
{ 0.429875, 1.73326, 3.22064 },
{ 0.424875, 1.74698, 3.19138 },
{ 0.419875, 1.76066, 3.16188 },
{ 0.414875, 1.77426, 3.13246 },
{ 0.409875, 1.78784, 3.10271 },
{ 0.404875, 1.80129, 3.073 },
{ 0.399875, 1.81474, 3.043 },
{ 0.394875, 1.82806, 3.01308 },
{ 0.389875, 1.84137, 2.983 },
{ 0.384875, 1.8546, 2.95282 },
{ 0.379875, 1.8677, 2.92254 },
{ 0.374875, 1.88078, 2.89204 },
{ 0.369875, 1.89373, 2.86169 },
{ 0.364875, 1.90664, 2.83105 },
{ 0.359875, 1.91944, 2.80045 },
{ 0.354875, 1.93214, 2.76985 },
{ 0.349875, 1.94478, 2.73911 },
{ 0.344875, 1.95733, 2.70808 },
{ 0.339875, 1.96975, 2.67721 },
{ 0.334875, 1.9821, 2.64632 },
{ 0.329875, 1.99434, 2.61513 },
{ 0.324875, 2.00648, 2.58417 },
{ 0.319875, 2.01844, 2.55304 },
{ 0.314875, 2.03038, 2.52179 },
{ 0.309875, 2.04219, 2.4907 },
{ 0.304875, 2.05381, 2.45945 },
{ 0.299875, 2.06536, 2.42806 },
{ 0.294875, 2.07672, 2.39685 },
{ 0.289875, 2.088, 2.36548 },
{ 0.284875, 2.0991, 2.33405 },
{ 0.279875, 2.11008, 2.30277 },
{ 0.274875, 2.1209, 2.27145 },
{ 0.269875, 2.13157, 2.24004 },
{ 0.264875, 2.14205, 2.20868 },
{ 0.259875, 2.15242, 2.1773 },
{ 0.254875, 2.16254, 2.14598 },
{ 0.249875, 2.17251, 2.11463 },
{ 0.244875, 2.1823, 2.08333 },
{ 0.239875, 2.19186, 2.05215 },
{ 0.234875, 2.20127, 2.0209 },
{ 0.229875, 2.21041, 1.98972 },
{ 0.224875, 2.21933, 1.95863 },
{ 0.219875, 2.22808, 1.92755 },
{ 0.214875, 2.23654, 1.89655 },
{ 0.209875, 2.2448, 1.86565 },
{ 0.204875, 2.25271, 1.8348 },
{ 0.199875, 2.26036, 1.80409 },
{ 0.194875, 2.26776, 1.77353 },
{ 0.189875, 2.27484, 1.74282 },
{ 0.184875, 2.28165, 1.71248 },
{ 0.179875, 2.28812, 1.68215 },
{ 0.174875, 2.2942, 1.65198 },
{ 0.169875, 2.30005, 1.62203 },
{ 0.164875, 2.30544, 1.59217 },
{ 0.159875, 2.31047, 1.56258 },
{ 0.154875, 2.3151, 1.53319 },
{ 0.149875, 2.31928, 1.50383 },
{ 0.144875, 2.32313, 1.47488 },
{ 0.139875, 2.32648, 1.44603 },
{ 0.134875, 2.32935, 1.41738 },
{ 0.129875, 2.33163, 1.3891 },
{ 0.124875, 2.33352, 1.36115 },
{ 0.119875, 2.33488, 1.33334 },
{ 0.114875, 2.33557, 1.30593 },
{ 0.109875, 2.33566, 1.27889 },
{ 0.104875, 2.33508, 1.25219 },
{ 0.099875, 2.33402, 1.22586 },
{ 0.094875, 2.33223, 1.20001 },
{ 0.089875, 2.32959, 1.17449 },
{ 0.084875, 2.32628, 1.14951 },
{ 0.079875, 2.32229, 1.12504 },
{ 0.074875, 2.31741, 1.10112 },
{ 0.069875, 2.31165, 1.07753 },
{ 0.064875, 2.30518, 1.05473 },
{ 0.059875, 2.2977, 1.0327 },
{ 0.054875, 2.28925, 1.01113 },
{ 0.049875, 2.27983, 0.990318 },
{ 0.044875, 2.26958, 0.970277 },
{ 0.039875, 2.25826, 0.951088 },
{ 0.034875, 2.2459, 0.932586 },
{ 0.029875, 2.23256, 0.915073 },
{ 0.024875, 2.21818, 0.898557 },
{ 0.019875, 2.20272, 0.882847 },
{ 0.014875, 2.18631, 0.86842 },
{ 0.009875, 2.16899, 0.854892 },
{ 0.004875, 2.15068, 0.842454 },
{ 0, 2.13036, 0.830657 },
}
};
